#  -----------------------------------------------------------------------
#     Default values for xrootd GSI plugin
#  -----------------------------------------------------------------------
@DEFAULTS_HEADER@

xrootd.gsi.hostcert.key=${dcache.authn.hostcert.key}
xrootd.gsi.hostcert.cert=${dcache.authn.hostcert.cert}
xrootd.gsi.hostcert.refresh=${dcache.authn.hostcert.refresh}
xrootd.gsi.hostcert.refresh.unit=${dcache.authn.hostcert.refresh.unit}
xrootd.gsi.hostcert.verify=${dcache.authn.hostcert.verify}

##
#  -------------------- TPC PROXY HANDLING ----------------------
#
#  With xrootd 4.9, proxy delegation has been implemented.
#  In dCache, we support three ways of providing the third-party client
#  with a proxy credential.
#
#  1.   Auto-generated from the hostcert/hostkey.
#  2.   Externally generated and refreshed
#       (location indicated by the proxy path property)
#  3.   Actual delegated credential signed by the client and stored
#       in the (srmmanager) credential store.
#
#  The properties below have to do with options 1 & 2.
#
#  Option 3 is available from 5.0.x onward.
##

##
#  These properties have to do with the third-party client on the pool.
#  Currently, its credential defaults to the host credential, but
#  there may be a need to give it something more specific to the
#  the organization.
#
##
xrootd.gsi.tpc.cred.key=${xrootd.gsi.hostcert.key}
xrootd.gsi.tpc.cred.cert=${xrootd.gsi.hostcert.cert}
xrootd.gsi.tpc.cred.refresh=${xrootd.gsi.hostcert.refresh}
xrootd.gsi.tpc.cred.refresh.unit=${xrootd.gsi.hostcert.refresh.unit}
xrootd.gsi.tpc.cred.verify=${xrootd.gsi.hostcert.verify}

##
#  A specific proxy credential can be set.  This will override the
#  use of a proxy automatically generated from the PEM credential
#  indicated by the key/cert properties above.  The presumption is
#  that any such externally generated proxy will also be externally refreshed.
##
xrootd.gsi.tpc.proxy.path=

##
#  Do not allow the TPC client to fall back to generating a proxy from
#  the host certificate or looking for a proxy at the above path.
#
#  Default is true.
#
#  Only set this to false if you are sure that pools with the gsi
#  module loaded for tpc will be able to use a generated proxy or a robocert
#  successfully (this will depend upon what the remote endpoint is
#  configured to accept).
##
xrootd.gsi.tpc.delegation-only=true

xrootd.gsi.ca.path=${dcache.authn.capath}
xrootd.gsi.ca.refresh=${dcache.authn.capath.refresh}
xrootd.gsi.ca.refresh.unit=${dcache.authn.capath.refresh.unit}
(one-of?GLOBUS_EUGRIDPMA|EUGRIDPMA_GLOBUS|GLOBUS|EUGRIDPMA|GLOBUS_EUGRIDPMA_REQUIRE|EUGRIDPMA_GLOBUS_REQUIRE|GLOBUS_REQUIRE|EUGRIDPMA_REQUIRE|EUGRIDPMA_AND_GLOBUS|EUGRIDPMA_AND_GLOBUS_REQUIRE|IGNORE|${dcache.authn.namespace-mode})\
xrootd.gsi.ca.namespace-mode=${dcache.authn.namespace-mode}
(one-of?REQUIRE|IF_VALID|IGNORE|${dcache.authn.crl-mode})\
xrootd.gsi.ca.crl-mode=${dcache.authn.crl-mode}
(one-of?REQUIRE|IF_AVAILABLE|IGNORE|${dcache.authn.ocsp-mode})\
xrootd.gsi.ca.ocsp-mode=${dcache.authn.ocsp-mode}
xrootd.gsi.vomsdir.dir=${dcache.authn.vomsdir}